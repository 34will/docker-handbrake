#
# Drone pipeline to build Docker image.
#

kind: pipeline
type: docker
name: default

steps:

- name: build-only
  image: plugins/docker
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    build_args:
    - DOCKER_IMAGE_VERSION=drone-ci
    dry_run: true
  when:
    ref:
      exclude:
      - refs/tags/v*

- name: set-docker-tags
  image: alpine
  commands:
  # Always tag the Docker image with the Git tag (i.e. vX.Y.Z).
  - printf "${DRONE_TAG}" >> .tags
  # Tag the Docker image with with 'latest' only if not a prerelease.
  - printf "${DRONE_TAG}" | grep -q '-' || printf ",latest" >> .tags
  when:
    ref:
    - refs/tags/v*

- name: build-and-push
  image: plugins/docker
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password
    build_args:
    - DOCKER_IMAGE_VERSION=${DRONE_TAG:1}
  when:
    ref:
    - refs/tags/v*

- name: push-dockerhub-readme
  image: jlesage/drone-push-readme
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password
    readme: DOCKERHUB.md
  when:
    ref:
    - refs/tags/v*

- name: microbadger
  image: plugins/webhook
  settings:
    urls:
      from_secret: microbadger_webhook
  failure: ignore
  when:
    ref:
    - refs/tags/v*

- name: notification
  image: plugins/pushover
  settings:
    message: "{{ repo.owner }}/{{ repo.name }}#{{ truncate build.commit 8 }} ({{ build.branch }}) by {{ build.author }} - {{ build.message }}"
    token:
      from_secret: pushover_token
    user:
      from_secret: pushover_user
  failure: ignore
  when:
    event:
      exclude:
      - pull_request
    status:
    - success
    - failure

---
kind: pipeline
type: docker
name: debug

steps:

- name: build-only
  image: plugins/docker
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    build_args:
    - HANDBRAKE_DEBUG_MODE=max
    - DOCKER_IMAGE_VERSION=drone-ci-debug
    dry_run: true
  when:
    ref:
      exclude:
      - refs/tags/v*

- name: set-docker-tags
  image: alpine
  commands:
  # Always tag the Docker image with the Git tag (i.e. vX.Y.Z).
  - printf "${DRONE_TAG}-debug" >> .tags
  when:
    ref:
    - refs/tags/v*

- name: build-and-push
  image: plugins/docker
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password
    build_args:
    - HANDBRAKE_DEBUG_MODE=max
    - DOCKER_IMAGE_VERSION=${DRONE_TAG:1}
  when:
    ref:
    - refs/tags/v*

- name: microbadger
  image: plugins/webhook
  settings:
    urls:
      from_secret: microbadger_webhook
  failure: ignore
  when:
    ref:
    - refs/tags/v*

- name: notification
  image: plugins/pushover
  settings:
    message: "{{ repo.owner }}/{{ repo.name }}#{{ truncate build.commit 8 }} ({{ build.branch }}) by {{ build.author }} - {{ build.message }}"
    token:
      from_secret: pushover_token
    user:
      from_secret: pushover_user
  failure: ignore
  when:
    event:
      exclude:
      - pull_request
    status:
    - success
    - failure

# The HandBrake nightly build is start by pushing a git tag in the following
# format:
#   v<IMG_VERSION>-dev-<YYYYMMDD><HASH>
# Where:
#  - IMG_VERSION is the latest Docker image version.
#  - YYYYMMDD is the date of the latest HanBrake commit.
#  - HASH is the hash of the latest HandBrake commit.
---
kind: pipeline
type: docker
name: nightly

steps:

- name: set-docker-tags
  image: alpine
  commands:
  # Always tag the Docker image with the Git tag (i.e. vX.Y.Z).
  - printf "${DRONE_TAG}" >> .tags

- name: build-and-push
  image: plugins/docker
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password
    dockerfile: Dockerfile.nightly
    build_args:
    - HANDBRAKE_DEBUG_MODE=max
    - HANDBRAKE_URL=https://github.com/HandBrake/HandBrake.git
    - HANDBRAKE_VERSION=${DRONE_TAG##*-}
    - DOCKER_IMAGE_VERSION=${DRONE_TAG:1}

- name: microbadger
  image: plugins/webhook
  settings:
    urls:
      from_secret: microbadger_webhook
  failure: ignore

- name: notification
  image: plugins/pushover
  settings:
    message: "{{ repo.owner }}/{{ repo.name }}#{{ truncate build.commit 8 }} ({{ build.branch }}) by {{ build.author }} - {{ build.message }}"
    token:
      from_secret: pushover_token
    user:
      from_secret: pushover_user
  failure: ignore
  when:
    status:
    - success
    - failure

trigger:
  ref:
  - refs/tags/v*-dev-*

